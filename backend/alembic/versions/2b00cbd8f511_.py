"""empty message

Revision ID: 2b00cbd8f511
Revises: 1dd2ce536993
Create Date: 2024-11-07 12:57:20.272719

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "2b00cbd8f511"
down_revision = "1dd2ce536993"
branch_labels = None
depends_on = None

match_type_enum = postgresql.ENUM("RANKED", "LOBBY", name="matchtype", create_type=False)
match_result_enum = postgresql.ENUM("LOSE", "WIN", name="matchresult", create_type=False)

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    match_type_enum.create(op.get_bind(), checkfirst=True)
    match_result_enum.create(op.get_bind(), checkfirst=True)
    op.create_table(
        "matches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("replay", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "match_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("current_timestamp"),
            nullable=False,
        ),
        sa.Column("type", match_type_enum, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "player_matches",
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("match_id", sa.Integer(), nullable=False),
        sa.Column("result", match_result_enum, nullable=False),
        sa.ForeignKeyConstraint(
            ["match_id"],
            ["matches.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("player_id", "match_id", name="player_match_pk"),
    )
    op.create_index(
        op.f("ix_player_matches_player_id"),
        "player_matches",
        ["player_id"],
        unique=False,
    )
    op.drop_index("ix_match_history_player_one", table_name="match_history")
    op.drop_index("ix_match_history_player_two", table_name="match_history")
    op.drop_constraint("elo_change_match_id_fkey", "elo_change", type_="foreignkey")
    op.drop_table("match_history")
    op.create_foreign_key("elo_change_matches_fk", "elo_change", "matches", ["match_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("elo_change_matches_fk", "elo_change", type_="foreignkey")
    op.create_table(
        "match_history",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("player_one", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("player_two", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "replay",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "match_time",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["player_one"], ["user.id"], name="match_history_player_one_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["player_two"], ["user.id"], name="match_history_player_two_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="match_history_pkey"),
    )
    op.create_foreign_key(
        "elo_change_match_id_fkey", "elo_change", "match_history", ["match_id"], ["id"]
    )
    op.create_index(
        "ix_match_history_player_two", "match_history", ["player_two"], unique=False
    )
    op.create_index(
        "ix_match_history_player_one", "match_history", ["player_one"], unique=False
    )
    op.drop_index(op.f("ix_player_matches_player_id"), table_name="player_matches")
    op.drop_table("player_matches")
    op.drop_table("matches")
    match_type_enum.drop(op.get_bind())

    # ### end Alembic commands ###
