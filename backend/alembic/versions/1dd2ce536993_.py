"""empty message

Revision ID: 1dd2ce536993
Revises: 7b5bc600c657
Create Date: 2024-11-06 07:16:44.276691

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1dd2ce536993"
down_revision = "7b5bc600c657"
branch_labels = None
depends_on = None

coin_change_enum = postgresql.ENUM(
    "MATCH", "SHOP", "PROMOTION", "ADMIN", name="coin_change_enum", create_type=False
)

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    coin_change_enum.create(op.get_bind(), checkfirst=True)
    op.create_table(
        "admin_user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("display_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_admin_user_email"), "admin_user", ["email"], unique=True)
    op.create_table(
        "countries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "coin_change",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("coin_change", sa.Integer(), nullable=False),
        sa.Column("event_type", coin_change_enum, nullable=True),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_elo_change_player_id"), "elo_change", ["player_id"], unique=False
    )
    op.drop_index("match_player_one_idx", table_name="match_history")
    op.drop_index("match_player_two_idx", table_name="match_history")
    op.create_index(
        op.f("ix_match_history_player_one"),
        "match_history",
        ["player_one"],
        unique=False,
    )
    op.create_index(
        op.f("ix_match_history_player_two"),
        "match_history",
        ["player_two"],
        unique=False,
    )
    op.add_column("user", sa.Column("country", sa.Integer(), nullable=False))
    op.create_index(op.f("ix_user_country"), "user", ["country"], unique=False)
    op.create_foreign_key("fk_user_country", "user", "countries", ["country"], ["id"])
    op.create_index(
        op.f("ix_user_inventory_item_id"), "user_inventory", ["item_id"], unique=False
    )
    op.create_index(
        op.f("ix_user_inventory_user_id"), "user_inventory", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_inventory_user_id"), table_name="user_inventory")
    op.drop_index(op.f("ix_user_inventory_item_id"), table_name="user_inventory")
    op.drop_constraint("fk_user_country", "user", type_="foreignkey")
    op.drop_index(op.f("ix_user_country"), table_name="user")
    op.drop_column("user", "country")
    op.drop_index(op.f("ix_match_history_player_two"), table_name="match_history")
    op.drop_index(op.f("ix_match_history_player_one"), table_name="match_history")
    op.create_index(
        "match_player_two_idx", "match_history", ["player_two"], unique=False
    )
    op.create_index(
        "match_player_one_idx", "match_history", ["player_one"], unique=False
    )
    op.drop_index(op.f("ix_elo_change_player_id"), table_name="elo_change")
    op.drop_table("coin_change")
    op.drop_table("countries")
    op.drop_index(op.f("ix_admin_user_email"), table_name="admin_user")
    op.drop_table("admin_user")
    coin_change_enum.drop(op.get_bind())
    # ### end Alembic commands ###
